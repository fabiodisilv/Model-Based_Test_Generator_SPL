/**
 * generated by Xtext 2.21.0
 */
package se.mdh.dva501.testsuite.testSuite.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import se.mdh.dva501.testsuite.testSuite.ProductStep;
import se.mdh.dva501.testsuite.testSuite.Signal;
import se.mdh.dva501.testsuite.testSuite.TestSuitePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Product Step</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link se.mdh.dva501.testsuite.testSuite.impl.ProductStepImpl#getProductSignal <em>Product Signal</em>}</li>
 *   <li>{@link se.mdh.dva501.testsuite.testSuite.impl.ProductStepImpl#getSystem <em>System</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProductStepImpl extends MinimalEObjectImpl.Container implements ProductStep
{
  /**
   * The cached value of the '{@link #getProductSignal() <em>Product Signal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductSignal()
   * @generated
   * @ordered
   */
  protected Signal productSignal;

  /**
   * The default value of the '{@link #getSystem() <em>System</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystem()
   * @generated
   * @ordered
   */
  protected static final String SYSTEM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSystem() <em>System</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystem()
   * @generated
   * @ordered
   */
  protected String system = SYSTEM_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProductStepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestSuitePackage.Literals.PRODUCT_STEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Signal getProductSignal()
  {
    return productSignal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProductSignal(Signal newProductSignal, NotificationChain msgs)
  {
    Signal oldProductSignal = productSignal;
    productSignal = newProductSignal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL, oldProductSignal, newProductSignal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProductSignal(Signal newProductSignal)
  {
    if (newProductSignal != productSignal)
    {
      NotificationChain msgs = null;
      if (productSignal != null)
        msgs = ((InternalEObject)productSignal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL, null, msgs);
      if (newProductSignal != null)
        msgs = ((InternalEObject)newProductSignal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL, null, msgs);
      msgs = basicSetProductSignal(newProductSignal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL, newProductSignal, newProductSignal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSystem()
  {
    return system;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSystem(String newSystem)
  {
    String oldSystem = system;
    system = newSystem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestSuitePackage.PRODUCT_STEP__SYSTEM, oldSystem, system));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL:
        return basicSetProductSignal(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL:
        return getProductSignal();
      case TestSuitePackage.PRODUCT_STEP__SYSTEM:
        return getSystem();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL:
        setProductSignal((Signal)newValue);
        return;
      case TestSuitePackage.PRODUCT_STEP__SYSTEM:
        setSystem((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL:
        setProductSignal((Signal)null);
        return;
      case TestSuitePackage.PRODUCT_STEP__SYSTEM:
        setSystem(SYSTEM_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_STEP__PRODUCT_SIGNAL:
        return productSignal != null;
      case TestSuitePackage.PRODUCT_STEP__SYSTEM:
        return SYSTEM_EDEFAULT == null ? system != null : !SYSTEM_EDEFAULT.equals(system);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (system: ");
    result.append(system);
    result.append(')');
    return result.toString();
  }

} //ProductStepImpl
