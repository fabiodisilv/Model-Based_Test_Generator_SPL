/**
 * generated by Xtext 2.21.0
 */
package se.mdh.dva501.testsuite.testSuite.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import se.mdh.dva501.testsuite.testSuite.ProductValueException;
import se.mdh.dva501.testsuite.testSuite.TestSuitePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Product Value Exception</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link se.mdh.dva501.testsuite.testSuite.impl.ProductValueExceptionImpl#getProductName <em>Product Name</em>}</li>
 *   <li>{@link se.mdh.dva501.testsuite.testSuite.impl.ProductValueExceptionImpl#getProductValue <em>Product Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProductValueExceptionImpl extends MinimalEObjectImpl.Container implements ProductValueException
{
  /**
   * The default value of the '{@link #getProductName() <em>Product Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductName()
   * @generated
   * @ordered
   */
  protected static final String PRODUCT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProductName() <em>Product Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductName()
   * @generated
   * @ordered
   */
  protected String productName = PRODUCT_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getProductValue() <em>Product Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductValue()
   * @generated
   * @ordered
   */
  protected static final String PRODUCT_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProductValue() <em>Product Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProductValue()
   * @generated
   * @ordered
   */
  protected String productValue = PRODUCT_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProductValueExceptionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestSuitePackage.Literals.PRODUCT_VALUE_EXCEPTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProductName()
  {
    return productName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProductName(String newProductName)
  {
    String oldProductName = productName;
    productName = newProductName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_NAME, oldProductName, productName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProductValue()
  {
    return productValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProductValue(String newProductValue)
  {
    String oldProductValue = productValue;
    productValue = newProductValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_VALUE, oldProductValue, productValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_NAME:
        return getProductName();
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_VALUE:
        return getProductValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_NAME:
        setProductName((String)newValue);
        return;
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_VALUE:
        setProductValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_NAME:
        setProductName(PRODUCT_NAME_EDEFAULT);
        return;
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_VALUE:
        setProductValue(PRODUCT_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_NAME:
        return PRODUCT_NAME_EDEFAULT == null ? productName != null : !PRODUCT_NAME_EDEFAULT.equals(productName);
      case TestSuitePackage.PRODUCT_VALUE_EXCEPTION__PRODUCT_VALUE:
        return PRODUCT_VALUE_EDEFAULT == null ? productValue != null : !PRODUCT_VALUE_EDEFAULT.equals(productValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (productName: ");
    result.append(productName);
    result.append(", productValue: ");
    result.append(productValue);
    result.append(')');
    return result.toString();
  }

} //ProductValueExceptionImpl
