/**
 * generated by Xtext 2.21.0
 */
package se.mdh.dva501.testsuite.testSuite.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import se.mdh.dva501.testsuite.testSuite.Signal;
import se.mdh.dva501.testsuite.testSuite.Step;
import se.mdh.dva501.testsuite.testSuite.TestSuitePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Step</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link se.mdh.dva501.testsuite.testSuite.impl.StepImpl#getGenericSignal <em>Generic Signal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StepImpl extends MinimalEObjectImpl.Container implements Step
{
  /**
   * The cached value of the '{@link #getGenericSignal() <em>Generic Signal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGenericSignal()
   * @generated
   * @ordered
   */
  protected Signal genericSignal;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestSuitePackage.Literals.STEP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Signal getGenericSignal()
  {
    return genericSignal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGenericSignal(Signal newGenericSignal, NotificationChain msgs)
  {
    Signal oldGenericSignal = genericSignal;
    genericSignal = newGenericSignal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestSuitePackage.STEP__GENERIC_SIGNAL, oldGenericSignal, newGenericSignal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGenericSignal(Signal newGenericSignal)
  {
    if (newGenericSignal != genericSignal)
    {
      NotificationChain msgs = null;
      if (genericSignal != null)
        msgs = ((InternalEObject)genericSignal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestSuitePackage.STEP__GENERIC_SIGNAL, null, msgs);
      if (newGenericSignal != null)
        msgs = ((InternalEObject)newGenericSignal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestSuitePackage.STEP__GENERIC_SIGNAL, null, msgs);
      msgs = basicSetGenericSignal(newGenericSignal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestSuitePackage.STEP__GENERIC_SIGNAL, newGenericSignal, newGenericSignal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TestSuitePackage.STEP__GENERIC_SIGNAL:
        return basicSetGenericSignal(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestSuitePackage.STEP__GENERIC_SIGNAL:
        return getGenericSignal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestSuitePackage.STEP__GENERIC_SIGNAL:
        setGenericSignal((Signal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.STEP__GENERIC_SIGNAL:
        setGenericSignal((Signal)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestSuitePackage.STEP__GENERIC_SIGNAL:
        return genericSignal != null;
    }
    return super.eIsSet(featureID);
  }

} //StepImpl
