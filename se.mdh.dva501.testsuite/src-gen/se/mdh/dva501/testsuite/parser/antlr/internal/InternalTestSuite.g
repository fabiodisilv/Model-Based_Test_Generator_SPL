/*
 * generated by Xtext 2.21.0
 */
grammar InternalTestSuite;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package se.mdh.dva501.testsuite.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package se.mdh.dva501.testsuite.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import se.mdh.dva501.testsuite.services.TestSuiteGrammarAccess;

}

@parser::members {

 	private TestSuiteGrammarAccess grammarAccess;

    public InternalTestSuiteParser(TokenStream input, TestSuiteGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TestSuite";
   	}

   	@Override
   	protected TestSuiteGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTestSuite
entryRuleTestSuite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestSuiteRule()); }
	iv_ruleTestSuite=ruleTestSuite
	{ $current=$iv_ruleTestSuite.current; }
	EOF;

// Rule TestSuite
ruleTestSuite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTestSuiteAccess().getTestCasesTestCaseParserRuleCall_0_0());
				}
				lv_testCases_0_0=ruleTestCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestSuiteRule());
					}
					add(
						$current,
						"testCases",
						lv_testCases_0_0,
						"se.mdh.dva501.testsuite.TestSuite.TestCase");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTestSuiteAccess().getProductTestCasesProductTestCaseParserRuleCall_1_0());
				}
				lv_productTestCases_1_0=ruleProductTestCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestSuiteRule());
					}
					add(
						$current,
						"productTestCases",
						lv_productTestCases_1_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductTestCase");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTestCase
entryRuleTestCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestCaseRule()); }
	iv_ruleTestCase=ruleTestCase
	{ $current=$iv_ruleTestCase.current; }
	EOF;

// Rule TestCase
ruleTestCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TestCase'
		{
			newLeafNode(otherlv_0, grammarAccess.getTestCaseAccess().getTestCaseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTestCaseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTestCaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='checks'
		{
			newLeafNode(otherlv_2, grammarAccess.getTestCaseAccess().getChecksKeyword_2());
		}
		(
			(
				lv_genericFunction_3_0=RULE_ID
				{
					newLeafNode(lv_genericFunction_3_0, grammarAccess.getTestCaseAccess().getGenericFunctionIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTestCaseRule());
					}
					setWithLastConsumed(
						$current,
						"genericFunction",
						lv_genericFunction_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTestCaseAccess().getProductExceptionProductExceptionParserRuleCall_4_0());
				}
				lv_productException_4_0=ruleProductException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestCaseRule());
					}
					add(
						$current,
						"productException",
						lv_productException_4_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductException");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getTestCaseAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTestCaseAccess().getStepsStepParserRuleCall_6_0());
				}
				lv_steps_6_0=ruleStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestCaseRule());
					}
					add(
						$current,
						"steps",
						lv_steps_6_0,
						"se.mdh.dva501.testsuite.TestSuite.Step");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTestCaseAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleProductException
entryRuleProductException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductExceptionRule()); }
	iv_ruleProductException=ruleProductException
	{ $current=$iv_ruleProductException.current; }
	EOF;

// Rule ProductException
ruleProductException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='except'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductExceptionAccess().getExceptKeyword_0());
		}
		otherlv_1='Product'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductExceptionAccess().getProductKeyword_1());
		}
		(
			(
				lv_productName_2_0=RULE_ID
				{
					newLeafNode(lv_productName_2_0, grammarAccess.getProductExceptionAccess().getProductNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductExceptionRule());
					}
					setWithLastConsumed(
						$current,
						"productName",
						lv_productName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	iv_ruleStep=ruleStep
	{ $current=$iv_ruleStep.current; }
	EOF;

// Rule Step
ruleStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStepAccess().getSetParserRuleCall_0());
		}
		this_Set_0=ruleSet
		{
			$current = $this_Set_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStepAccess().getCheckParserRuleCall_1());
		}
		this_Check_1=ruleCheck
		{
			$current = $this_Check_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStepAccess().getForceParserRuleCall_2());
		}
		this_Force_2=ruleForce
		{
			$current = $this_Force_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStepAccess().getUnforceParserRuleCall_3());
		}
		this_Unforce_3=ruleUnforce
		{
			$current = $this_Unforce_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetAccess().getSetKeyword_0());
		}
		otherlv_1='Signal'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetAccess().getSignalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getGenericSignalSignalParserRuleCall_2_0());
				}
				lv_genericSignal_2_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					set(
						$current,
						"genericSignal",
						lv_genericSignal_2_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getValueValueParserRuleCall_4_0());
				}
				lv_value_4_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getProductValueExceptionsProductValueExceptionParserRuleCall_5_0());
				}
				lv_productValueExceptions_5_0=ruleProductValueException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					add(
						$current,
						"productValueExceptions",
						lv_productValueExceptions_5_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductValueException");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleForce
entryRuleForce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForceRule()); }
	iv_ruleForce=ruleForce
	{ $current=$iv_ruleForce.current; }
	EOF;

// Rule Force
ruleForce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Force'
		{
			newLeafNode(otherlv_0, grammarAccess.getForceAccess().getForceKeyword_0());
		}
		otherlv_1='Signal'
		{
			newLeafNode(otherlv_1, grammarAccess.getForceAccess().getSignalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForceAccess().getGenericSignalSignalParserRuleCall_2_0());
				}
				lv_genericSignal_2_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForceRule());
					}
					set(
						$current,
						"genericSignal",
						lv_genericSignal_2_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getForceAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForceAccess().getValueValueParserRuleCall_4_0());
				}
				lv_value_4_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForceRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForceAccess().getProductValueExceptionsProductValueExceptionParserRuleCall_5_0());
				}
				lv_productValueExceptions_5_0=ruleProductValueException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForceRule());
					}
					add(
						$current,
						"productValueExceptions",
						lv_productValueExceptions_5_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductValueException");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleUnforce
entryRuleUnforce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnforceRule()); }
	iv_ruleUnforce=ruleUnforce
	{ $current=$iv_ruleUnforce.current; }
	EOF;

// Rule Unforce
ruleUnforce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Unforce'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnforceAccess().getUnforceKeyword_0());
		}
		otherlv_1='Signal'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnforceAccess().getSignalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnforceAccess().getGenericSignalSignalParserRuleCall_2_0());
				}
				lv_genericSignal_2_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnforceRule());
					}
					set(
						$current,
						"genericSignal",
						lv_genericSignal_2_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	iv_ruleCheck=ruleCheck
	{ $current=$iv_ruleCheck.current; }
	EOF;

// Rule Check
ruleCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Check'
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckAccess().getCheckKeyword_0());
		}
		otherlv_1='Signal'
		{
			newLeafNode(otherlv_1, grammarAccess.getCheckAccess().getSignalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckAccess().getGenericSignalSignalParserRuleCall_2_0());
				}
				lv_genericSignal_2_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckRule());
					}
					set(
						$current,
						"genericSignal",
						lv_genericSignal_2_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getCheckAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckAccess().getValueValueParserRuleCall_4_0());
				}
				lv_value_4_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckAccess().getProductValueExceptionsProductValueExceptionParserRuleCall_5_0());
				}
				lv_productValueExceptions_5_0=ruleProductValueException
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckRule());
					}
					add(
						$current,
						"productValueExceptions",
						lv_productValueExceptions_5_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductValueException");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='timeout'
		{
			newLeafNode(otherlv_6, grammarAccess.getCheckAccess().getTimeoutKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCheckAccess().getTimeoutTimeoutParserRuleCall_7_0());
				}
				lv_timeout_7_0=ruleTimeout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCheckRule());
					}
					set(
						$current,
						"timeout",
						lv_timeout_7_0,
						"se.mdh.dva501.testsuite.TestSuite.Timeout");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProductValueException
entryRuleProductValueException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductValueExceptionRule()); }
	iv_ruleProductValueException=ruleProductValueException
	{ $current=$iv_ruleProductValueException.current; }
	EOF;

// Rule ProductValueException
ruleProductValueException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getProductValueExceptionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='Exception'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductValueExceptionAccess().getExceptionKeyword_1());
		}
		otherlv_2='Product'
		{
			newLeafNode(otherlv_2, grammarAccess.getProductValueExceptionAccess().getProductKeyword_2());
		}
		(
			(
				lv_productName_3_0=RULE_ID
				{
					newLeafNode(lv_productName_3_0, grammarAccess.getProductValueExceptionAccess().getProductNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductValueExceptionRule());
					}
					setWithLastConsumed(
						$current,
						"productName",
						lv_productName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductValueExceptionAccess().getToKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductValueExceptionAccess().getProductValueValueTypeParserRuleCall_5_0());
				}
				lv_productValue_5_0=ruleValueType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductValueExceptionRule());
					}
					set(
						$current,
						"productValue",
						lv_productValue_5_0,
						"se.mdh.dva501.testsuite.TestSuite.ValueType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getProductValueExceptionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleSignal
entryRuleSignal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignalRule()); }
	iv_ruleSignal=ruleSignal
	{ $current=$iv_ruleSignal.current; }
	EOF;

// Rule Signal
ruleSignal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSignalRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getValueAccess().getNameValueTypeParserRuleCall_0());
			}
			lv_name_0_0=ruleValueType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getValueRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"se.mdh.dva501.testsuite.TestSuite.ValueType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTimeout
entryRuleTimeout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeoutRule()); }
	iv_ruleTimeout=ruleTimeout
	{ $current=$iv_ruleTimeout.current; }
	EOF;

// Rule Timeout
ruleTimeout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_INT
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTimeoutAccess().getNameINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTimeoutRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleValueType
entryRuleValueType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueTypeRule()); }
	iv_ruleValueType=ruleValueType
	{ $current=$iv_ruleValueType.current.getText(); }
	EOF;

// Rule ValueType
ruleValueType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getValueTypeAccess().getIDTerminalRuleCall_0());
		}
		    |
		(
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getValueTypeAccess().getHyphenMinusKeyword_1_0());
				}
			)?
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getValueTypeAccess().getINTTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRuleProductTestCase
entryRuleProductTestCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductTestCaseRule()); }
	iv_ruleProductTestCase=ruleProductTestCase
	{ $current=$iv_ruleProductTestCase.current; }
	EOF;

// Rule ProductTestCase
ruleProductTestCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Specific'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductTestCaseAccess().getSpecificKeyword_0());
		}
		otherlv_1='TestCase'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductTestCaseAccess().getTestCaseKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProductTestCaseAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductTestCaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='for'
		{
			newLeafNode(otherlv_3, grammarAccess.getProductTestCaseAccess().getForKeyword_3());
		}
		otherlv_4='product'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductTestCaseAccess().getProductKeyword_4());
		}
		(
			(
				lv_productName_5_0=RULE_ID
				{
					newLeafNode(lv_productName_5_0, grammarAccess.getProductTestCaseAccess().getProductNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductTestCaseRule());
					}
					setWithLastConsumed(
						$current,
						"productName",
						lv_productName_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getProductTestCaseAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductTestCaseAccess().getProductStepsProductStepParserRuleCall_7_0());
				}
				lv_productSteps_7_0=ruleProductStep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductTestCaseRule());
					}
					add(
						$current,
						"productSteps",
						lv_productSteps_7_0,
						"se.mdh.dva501.testsuite.TestSuite.ProductStep");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getProductTestCaseAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleProductStep
entryRuleProductStep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductStepRule()); }
	iv_ruleProductStep=ruleProductStep
	{ $current=$iv_ruleProductStep.current; }
	EOF;

// Rule ProductStep
ruleProductStep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProductStepAccess().getProductSetParserRuleCall_0());
		}
		this_ProductSet_0=ruleProductSet
		{
			$current = $this_ProductSet_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProductStepAccess().getProductCheckParserRuleCall_1());
		}
		this_ProductCheck_1=ruleProductCheck
		{
			$current = $this_ProductCheck_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProductStepAccess().getProductForceParserRuleCall_2());
		}
		this_ProductForce_2=ruleProductForce
		{
			$current = $this_ProductForce_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProductStepAccess().getProductUnforceParserRuleCall_3());
		}
		this_ProductUnforce_3=ruleProductUnforce
		{
			$current = $this_ProductUnforce_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProductSet
entryRuleProductSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductSetRule()); }
	iv_ruleProductSet=ruleProductSet
	{ $current=$iv_ruleProductSet.current; }
	EOF;

// Rule ProductSet
ruleProductSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Set'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductSetAccess().getSetKeyword_0());
		}
		otherlv_1='Product'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductSetAccess().getProductKeyword_1());
		}
		otherlv_2='Signal'
		{
			newLeafNode(otherlv_2, grammarAccess.getProductSetAccess().getSignalKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductSetAccess().getProductSignalSignalParserRuleCall_3_0());
				}
				lv_productSignal_3_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductSetRule());
					}
					set(
						$current,
						"productSignal",
						lv_productSignal_3_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='on'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductSetAccess().getOnKeyword_4());
		}
		otherlv_5='System'
		{
			newLeafNode(otherlv_5, grammarAccess.getProductSetAccess().getSystemKeyword_5());
		}
		(
			(
				lv_system_6_0=RULE_ID
				{
					newLeafNode(lv_system_6_0, grammarAccess.getProductSetAccess().getSystemIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductSetRule());
					}
					setWithLastConsumed(
						$current,
						"system",
						lv_system_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getProductSetAccess().getToKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductSetAccess().getValueValueParserRuleCall_8_0());
				}
				lv_value_8_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductSetRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProductForce
entryRuleProductForce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductForceRule()); }
	iv_ruleProductForce=ruleProductForce
	{ $current=$iv_ruleProductForce.current; }
	EOF;

// Rule ProductForce
ruleProductForce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Force'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductForceAccess().getForceKeyword_0());
		}
		otherlv_1='Product'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductForceAccess().getProductKeyword_1());
		}
		otherlv_2='Signal'
		{
			newLeafNode(otherlv_2, grammarAccess.getProductForceAccess().getSignalKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductForceAccess().getProductSignalSignalParserRuleCall_3_0());
				}
				lv_productSignal_3_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductForceRule());
					}
					set(
						$current,
						"productSignal",
						lv_productSignal_3_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='on'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductForceAccess().getOnKeyword_4());
		}
		otherlv_5='System'
		{
			newLeafNode(otherlv_5, grammarAccess.getProductForceAccess().getSystemKeyword_5());
		}
		(
			(
				lv_system_6_0=RULE_ID
				{
					newLeafNode(lv_system_6_0, grammarAccess.getProductForceAccess().getSystemIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductForceRule());
					}
					setWithLastConsumed(
						$current,
						"system",
						lv_system_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getProductForceAccess().getToKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductForceAccess().getValueValueParserRuleCall_8_0());
				}
				lv_value_8_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductForceRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProductUnforce
entryRuleProductUnforce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductUnforceRule()); }
	iv_ruleProductUnforce=ruleProductUnforce
	{ $current=$iv_ruleProductUnforce.current; }
	EOF;

// Rule ProductUnforce
ruleProductUnforce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Unforce'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductUnforceAccess().getUnforceKeyword_0());
		}
		otherlv_1='Product'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductUnforceAccess().getProductKeyword_1());
		}
		otherlv_2='Signal'
		{
			newLeafNode(otherlv_2, grammarAccess.getProductUnforceAccess().getSignalKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductUnforceAccess().getProductSignalSignalParserRuleCall_3_0());
				}
				lv_productSignal_3_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductUnforceRule());
					}
					set(
						$current,
						"productSignal",
						lv_productSignal_3_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='on'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductUnforceAccess().getOnKeyword_4());
		}
		otherlv_5='System'
		{
			newLeafNode(otherlv_5, grammarAccess.getProductUnforceAccess().getSystemKeyword_5());
		}
		(
			(
				lv_system_6_0=RULE_ID
				{
					newLeafNode(lv_system_6_0, grammarAccess.getProductUnforceAccess().getSystemIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductUnforceRule());
					}
					setWithLastConsumed(
						$current,
						"system",
						lv_system_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProductCheck
entryRuleProductCheck returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductCheckRule()); }
	iv_ruleProductCheck=ruleProductCheck
	{ $current=$iv_ruleProductCheck.current; }
	EOF;

// Rule ProductCheck
ruleProductCheck returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Check'
		{
			newLeafNode(otherlv_0, grammarAccess.getProductCheckAccess().getCheckKeyword_0());
		}
		otherlv_1='Product'
		{
			newLeafNode(otherlv_1, grammarAccess.getProductCheckAccess().getProductKeyword_1());
		}
		otherlv_2='Signal'
		{
			newLeafNode(otherlv_2, grammarAccess.getProductCheckAccess().getSignalKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductCheckAccess().getProductSignalSignalParserRuleCall_3_0());
				}
				lv_productSignal_3_0=ruleSignal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductCheckRule());
					}
					set(
						$current,
						"productSignal",
						lv_productSignal_3_0,
						"se.mdh.dva501.testsuite.TestSuite.Signal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='on'
		{
			newLeafNode(otherlv_4, grammarAccess.getProductCheckAccess().getOnKeyword_4());
		}
		otherlv_5='System'
		{
			newLeafNode(otherlv_5, grammarAccess.getProductCheckAccess().getSystemKeyword_5());
		}
		(
			(
				lv_system_6_0=RULE_ID
				{
					newLeafNode(lv_system_6_0, grammarAccess.getProductCheckAccess().getSystemIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductCheckRule());
					}
					setWithLastConsumed(
						$current,
						"system",
						lv_system_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getProductCheckAccess().getToKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductCheckAccess().getValueValueParserRuleCall_8_0());
				}
				lv_value_8_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductCheckRule());
					}
					set(
						$current,
						"value",
						lv_value_8_0,
						"se.mdh.dva501.testsuite.TestSuite.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='timeout'
		{
			newLeafNode(otherlv_9, grammarAccess.getProductCheckAccess().getTimeoutKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductCheckAccess().getTimeoutTimeoutParserRuleCall_10_0());
				}
				lv_timeout_10_0=ruleTimeout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductCheckRule());
					}
					set(
						$current,
						"timeout",
						lv_timeout_10_0,
						"se.mdh.dva501.testsuite.TestSuite.Timeout");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
